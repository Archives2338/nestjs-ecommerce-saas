#!/bin/bash

# üß™ TEST: Flujo de Registro con Email Templates GamsGo
# =====================================================

BASE_URL="http://localhost:3000"
TEST_EMAIL="usuario.prueba@gmail.com"
TEST_NAME="Usuario"
TEST_LASTNAME="Prueba"

# Colores
GREEN='\033[0;32m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${CYAN}üß™ TEST: FLUJO COMPLETO DE REGISTRO CON EMAILS${NC}"
echo "======================================================"

echo ""
echo -e "${GREEN}üìã Configuraci√≥n del test:${NC}"
echo "‚Ä¢ Base URL: $BASE_URL"
echo "‚Ä¢ Email de prueba: $TEST_EMAIL"
echo "‚Ä¢ Nombre: $TEST_NAME $TEST_LASTNAME"

echo ""
echo -e "${GREEN}PASO 1: üìß Verificar email y solicitar c√≥digo${NC}"
STEP1_RESPONSE=$(curl -s -X POST "$BASE_URL/api/customer/auth/check-email" \
  -H "Content-Type: application/json" \
  -d "{\"email\": \"$TEST_EMAIL\"}")

echo "$STEP1_RESPONSE" | jq '.'

EMAIL_EXISTS=$(echo "$STEP1_RESPONSE" | jq -r '.data.emailExists // false')

if [ "$EMAIL_EXISTS" = "true" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è El email ya est√° registrado. Probando con otro...${NC}"
    TEST_EMAIL="test.$(date +%s)@example.com"
    echo "Nuevo email de prueba: $TEST_EMAIL"
    
    STEP1_RESPONSE=$(curl -s -X POST "$BASE_URL/api/customer/auth/check-email" \
      -H "Content-Type: application/json" \
      -d "{\"email\": \"$TEST_EMAIL\"}")
    
    echo "$STEP1_RESPONSE" | jq '.'
fi

echo ""
echo -e "${GREEN}PASO 2: üì® Solicitar c√≥digo de verificaci√≥n${NC}"
STEP2_RESPONSE=$(curl -s -X POST "$BASE_URL/api/customer/auth/send-registration-code" \
  -H "Content-Type: application/json" \
  -d "{\"email\": \"$TEST_EMAIL\"}")

echo "$STEP2_RESPONSE" | jq '.'

CODE_SENT=$(echo "$STEP2_RESPONSE" | jq -r '.code')

if [ "$CODE_SENT" = "0" ]; then
    echo -e "${GREEN}‚úÖ C√≥digo de verificaci√≥n enviado${NC}"
    echo -e "${CYAN}üìß Revisa la consola del servidor para ver el c√≥digo generado${NC}"
    echo -e "${YELLOW}üí° En un entorno real, el c√≥digo se enviar√≠a por email${NC}"
    
    echo ""
    echo -e "${YELLOW}Por favor, ingresa el c√≥digo de 4 d√≠gitos que aparece en la consola del servidor:${NC}"
    read -p "C√≥digo de verificaci√≥n: " VERIFICATION_CODE
    
    if [ ! -z "$VERIFICATION_CODE" ]; then
        echo ""
        echo -e "${GREEN}PASO 3: ‚úÖ Verificar c√≥digo${NC}"
        STEP3_RESPONSE=$(curl -s -X POST "$BASE_URL/api/customer/auth/verify-registration-code" \
          -H "Content-Type: application/json" \
          -d "{\"email\": \"$TEST_EMAIL\", \"code\": \"$VERIFICATION_CODE\"}")
        
        echo "$STEP3_RESPONSE" | jq '.'
        
        CODE_VERIFIED=$(echo "$STEP3_RESPONSE" | jq -r '.code')
        
        if [ "$CODE_VERIFIED" = "0" ]; then
            echo -e "${GREEN}‚úÖ C√≥digo verificado correctamente${NC}"
            
            echo ""
            echo -e "${GREEN}PASO 4: üéØ Completar registro${NC}"
            STEP4_RESPONSE=$(curl -s -X POST "$BASE_URL/api/customer/auth/complete-registration" \
              -H "Content-Type: application/json" \
              -d "{
                \"email\": \"$TEST_EMAIL\",
                \"password\": \"Password123!\",
                \"firstName\": \"$TEST_NAME\",
                \"lastName\": \"$TEST_LASTNAME\",
                \"phone\": \"+51987654321\"
              }")
            
            echo "$STEP4_RESPONSE" | jq '.'
            
            REGISTRATION_SUCCESS=$(echo "$STEP4_RESPONSE" | jq -r '.code')
            
            if [ "$REGISTRATION_SUCCESS" = "0" ]; then
                echo -e "${GREEN}üéâ ¬°REGISTRO COMPLETADO EXITOSAMENTE!${NC}"
                
                JWT_TOKEN=$(echo "$STEP4_RESPONSE" | jq -r '.data.token')
                CUSTOMER_ID=$(echo "$STEP4_RESPONSE" | jq -r '.data.customer.id')
                
                echo -e "${CYAN}üë§ Usuario registrado:${NC}"
                echo "‚Ä¢ ID: $CUSTOMER_ID"
                echo "‚Ä¢ Email: $TEST_EMAIL"
                echo "‚Ä¢ Token JWT: ${JWT_TOKEN:0:50}..."
                
                echo ""
                echo -e "${GREEN}PASO 5: üîê Verificar login${NC}"
                LOGIN_RESPONSE=$(curl -s -X POST "$BASE_URL/api/customer/auth/login" \
                  -H "Content-Type: application/json" \
                  -d "{
                    \"email\": \"$TEST_EMAIL\",
                    \"password\": \"Password123!\"
                  }")
                
                echo "$LOGIN_RESPONSE" | jq '.'
                
                LOGIN_SUCCESS=$(echo "$LOGIN_RESPONSE" | jq -r '.code')
                
                if [ "$LOGIN_SUCCESS" = "0" ]; then
                    echo -e "${GREEN}‚úÖ Login exitoso${NC}"
                else
                    echo -e "${RED}‚ùå Error en login${NC}"
                fi
                
            else
                echo -e "${RED}‚ùå Error completando el registro${NC}"
            fi
        else
            echo -e "${RED}‚ùå Error verificando el c√≥digo${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è No se ingres√≥ c√≥digo de verificaci√≥n${NC}"
    fi
else
    echo -e "${RED}‚ùå Error enviando c√≥digo de verificaci√≥n${NC}"
fi

echo ""
echo -e "${CYAN}üìß VERIFICACIONES DE EMAIL:${NC}"
echo "=============================="
echo "‚úÖ Template de verificaci√≥n (c√≥digo de 4 d√≠gitos)"
echo "‚úÖ Template de bienvenida post-registro"
echo "‚úÖ Dise√±o responsive con branding GamsGo"
echo "‚úÖ Validaciones de seguridad"

echo ""
echo -e "${CYAN}üìã LOGS A REVISAR:${NC}"
echo "=================="
echo "‚Ä¢ Verificar en la consola del servidor el c√≥digo generado"
echo "‚Ä¢ Confirmar que se envi√≥ el email de verificaci√≥n"
echo "‚Ä¢ Confirmar que se envi√≥ el email de bienvenida"
echo "‚Ä¢ Revisar logs de errores si algo fall√≥"

echo ""
echo -e "${YELLOW}üí° CONFIGURACI√ìN REQUERIDA PARA EMAILS:${NC}"
echo "======================================="
echo "# Agregar a .env para emails reales:"
echo "SMTP_HOST=smtp.gmail.com"
echo "SMTP_USER=tu-email@gmail.com"
echo "SMTP_PASS=tu-app-password"
echo "FROM_EMAIL=noreply@gamsgo.com"
echo "APP_NAME=GamsGo"
echo "FRONTEND_URL=https://gamsgo.com"
