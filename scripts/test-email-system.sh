#!/bin/bash

# üß™ TEST: Sistema de Emails GamsGo
# ==================================

echo "üìß PROBANDO SISTEMA DE EMAILS CON TEMPLATES GAMSGO"
echo "=================================================="

# Verificar que nodemailer est√© instalado
echo ""
echo "üîß Verificando dependencias..."
if npm list nodemailer > /dev/null 2>&1; then
    echo "‚úÖ Nodemailer instalado"
else
    echo "‚ùå Nodemailer no encontrado. Instalando..."
    npm install nodemailer @types/nodemailer
fi

# Verificar variables de entorno
echo ""
echo "üîß Verificando configuraci√≥n de email..."
if [ -z "$SMTP_USER" ]; then
    echo "‚ö†Ô∏è  SMTP_USER no configurado"
else
    echo "‚úÖ SMTP_USER: $SMTP_USER"
fi

if [ -z "$SMTP_PASS" ]; then
    echo "‚ö†Ô∏è  SMTP_PASS no configurado"
else
    echo "‚úÖ SMTP_PASS: [configurado]"
fi

if [ -z "$FROM_EMAIL" ]; then
    echo "‚ö†Ô∏è  FROM_EMAIL no configurado"
else
    echo "‚úÖ FROM_EMAIL: $FROM_EMAIL"
fi

echo ""
echo "üìã CONFIGURACI√ìN RECOMENDADA PARA .env:"
echo "======================================="
echo "# Email Configuration"
echo "SMTP_HOST=smtp.gmail.com"
echo "SMTP_USER=tu-email@gmail.com"
echo "SMTP_PASS=tu-app-password"
echo "FROM_EMAIL=noreply@gamsgo.com"
echo "APP_NAME=GamsGo"
echo "FRONTEND_URL=https://gamsgo.com"
echo ""
echo "# SendGrid (Opcional, para producci√≥n)"
echo "SENDGRID_API_KEY=SG.your-api-key-here"

echo ""
echo "üìß TEMPLATES DISPONIBLES:"
echo "========================="
echo "‚úÖ Template de verificaci√≥n - C√≥digo de 6 d√≠gitos"
echo "‚úÖ Template de bienvenida - Post-verificaci√≥n"
echo "‚úÖ Template de credenciales - Con tabla estilizada"
echo "‚úÖ Dise√±o responsive con logos GamsGo"
echo "‚úÖ Footer personalizado con emoji üåπ"

echo ""
echo "üéØ INTEGRACI√ìN EN TU PROYECTO:"
echo "=============================="
echo "// En tu m√≥dulo (ej: auth.module.ts)"
echo "import { GamsGoEmailService } from './email/email.service.example';"
echo ""
echo "@Module({"
echo "  providers: [GamsGoEmailService],"
echo "  exports: [GamsGoEmailService]"
echo "})"
echo ""
echo "// En tu servicio de autenticaci√≥n"
echo "constructor(private emailService: GamsGoEmailService) {}"
echo ""
echo "// Enviar email de verificaci√≥n"
echo "const code = this.emailService.generateVerificationCode();"
echo "await this.emailService.sendVerificationEmail(email, {"
echo "  userName: 'Juan P√©rez',"
echo "  verificationCode: code,"
echo "  verificationUrl: 'https://gamsgo.com/verify?code=' + code,"
echo "  expiresIn: '10 minutos'"
echo "});"

echo ""
echo "üì± EJEMPLO DE USO PARA CREDENCIALES:"
echo "==================================="
echo "// Despu√©s de asignar credenciales a una orden"
echo "await this.emailService.sendCredentialsEmail(customerEmail, {"
echo "  orderNumber: order.out_trade_no,"
echo "  serviceName: 'Disney+',"
echo "  planName: 'Plan Familiar 5 perfiles',"
echo "  credentials: {"
echo "    email: 'cuenta@disney.com',"
echo "    password: 'password123'"
echo "  },"
echo "  profileName: 'Usuario Principal',"
echo "  expiresAt: new Date(Date.now() + 30*24*60*60*1000)"
echo "});"

echo ""
echo "üîí RECOMENDACIONES DE SEGURIDAD:"
echo "==============================="
echo "‚Ä¢ Usar Gmail App Passwords para SMTP"
echo "‚Ä¢ SendGrid para producci√≥n (mejor deliverability)"
echo "‚Ä¢ Rate limiting para prevenir spam"
echo "‚Ä¢ Validar emails antes de env√≠o"
echo "‚Ä¢ No enviar credenciales si el email no est√° verificado"

echo ""
echo "üöÄ PR√ìXIMOS PASOS:"
echo "=================="
echo "1. Configurar variables de entorno"
echo "2. Crear cuenta Gmail App Password o SendGrid"
echo "3. Integrar GamsGoEmailService en tu m√≥dulo"
echo "4. Probar env√≠o con email real"
echo "5. Implementar en flujo de registro y √≥rdenes"

echo ""
echo "‚úÖ COMPILACI√ìN EXITOSA"
echo "====================="
echo "Los templates est√°n listos para usar üéâ"
