#!/bin/bash

# Script para probar los endpoints de administraci√≥n de servicios
# Aseg√∫rate de que el servidor est√© corriendo en localhost:3000

BASE_URL="http://localhost:3000/api/admin/services"
CONTENT_TYPE="Content-Type: application/json"

echo "üîß Probando endpoints de administraci√≥n de servicios..."
echo "=================================================="

# 1. Obtener estad√≠sticas de servicios
echo ""
echo "üìä 1. Obteniendo estad√≠sticas de servicios..."
curl -X GET "${BASE_URL}/stats?language=es" \
  -H "${CONTENT_TYPE}" \
  -w "\nStatus: %{http_code}\n" \
  | jq '.' 2>/dev/null || echo "Respuesta recibida (sin formato JSON)"

sleep 2

# 2. Obtener todos los servicios (primera p√°gina)
echo ""
echo "üìã 2. Obteniendo lista de servicios (p√°gina 1)..."
curl -X GET "${BASE_URL}?language=es&page=1&limit=5" \
  -H "${CONTENT_TYPE}" \
  -w "\nStatus: %{http_code}\n" \
  | jq '.' 2>/dev/null || echo "Respuesta recibida (sin formato JSON)"

sleep 2

# 3. Obtener solo servicios activos
echo ""
echo "‚úÖ 3. Obteniendo servicios activos..."
curl -X GET "${BASE_URL}?language=es&active=true" \
  -H "${CONTENT_TYPE}" \
  -w "\nStatus: %{http_code}\n" \
  | jq '.' 2>/dev/null || echo "Respuesta recibida (sin formato JSON)"

sleep 2

# 4. Obtener solo servicios inactivos
echo ""
echo "‚ùå 4. Obteniendo servicios inactivos..."
curl -X GET "${BASE_URL}?language=es&active=false" \
  -H "${CONTENT_TYPE}" \
  -w "\nStatus: %{http_code}\n" \
  | jq '.' 2>/dev/null || echo "Respuesta recibida (sin formato JSON)"

sleep 2

# 5. Intentar obtener un servicio espec√≠fico por ID
echo ""
echo "üîç 5. Intentando obtener servicio espec√≠fico..."
echo "   (Nota: Necesitar√°s un ID real de MongoDB para esta prueba)"
# curl -X GET "${BASE_URL}/[ID_DEL_SERVICIO]" \
#   -H "${CONTENT_TYPE}" \
#   -w "\nStatus: %{http_code}\n" \
#   | jq '.' 2>/dev/null || echo "Respuesta recibida (sin formato JSON)"

echo ""
echo "üéâ Pruebas de lectura completadas!"
echo ""
echo "üí° Pr√≥ximos pasos:"
echo "   - Usa los IDs reales de los servicios para probar GET espec√≠fico"
echo "   - Prueba los endpoints de creaci√≥n, actualizaci√≥n y eliminaci√≥n"
echo "   - Verifica que los datos coincidan con los del seed"
echo ""
echo "üìù Ejemplos de uso:"
echo "   GET ${BASE_URL}                          # Listar todos"
echo "   GET ${BASE_URL}/stats                    # Estad√≠sticas"
echo "   GET ${BASE_URL}/[ID]                     # Servicio espec√≠fico"
echo "   POST ${BASE_URL}                         # Crear servicio"
echo "   PUT ${BASE_URL}/[ID]                     # Actualizar servicio"
echo "   POST ${BASE_URL}/[ID]/toggle-status      # Cambiar estado"
echo "   DELETE ${BASE_URL}/[ID]                  # Eliminar servicio"
