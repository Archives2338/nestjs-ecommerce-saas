# Test Script para el NUEVO FLUJO de Registro de Clientes

# Configuraci√≥n base
API_BASE="http://localhost:3000/api/customer/auth"
CONTENT_TYPE="Content-Type: application/json"

echo "üöÄ Testing NEW Customer Registration Flow (3 Steps)"
echo "=================================================="
echo

# Limpiar data de pruebas anteriores (opcional)
echo "üßπ Cleaning up previous test data..."
# Aqu√≠ podr√≠as agregar l√≥gica para limpiar la DB si es necesario
echo

# ============================================
# PASO 1: Verificar email y enviar c√≥digo
# ============================================
echo "üìß STEP 1: Check Email and Send Verification Code"
echo "Endpoint: POST $API_BASE/check-email"
echo

STEP1_RESPONSE=$(curl -s -X POST "$API_BASE/check-email" \
  -H "$CONTENT_TYPE" \
  -d '{
    "email": "maria@nuevoflujo.com"
  }')

echo "$STEP1_RESPONSE" | jq .

# Verificar que el c√≥digo se envi√≥ correctamente
STEP1_CODE=$(echo "$STEP1_RESPONSE" | jq -r '.code')
echo
if [ "$STEP1_CODE" = "0" ]; then
  echo "‚úÖ STEP 1 SUCCESS: Verification code sent"
  REDIRECT_URL=$(echo "$STEP1_RESPONSE" | jq -r '.redirect_url')
  echo "üîó Next step: $REDIRECT_URL"
else
  echo "‚ùå STEP 1 FAILED"
  exit 1
fi
echo
echo "-------------------------------------------"
echo

# ============================================
# PASO 2: Verificar c√≥digo (simulado)
# ============================================
echo "üîë STEP 2: Verify Registration Code"
echo "Endpoint: POST $API_BASE/verify-code"
echo "üìù Note: Using dummy code for demo (in real app, user would receive by email)"
echo

STEP2_RESPONSE=$(curl -s -X POST "$API_BASE/verify-code" \
  -H "$CONTENT_TYPE" \
  -d '{
    "email": "maria@nuevoflujo.com",
    "code": "123456"
  }')

echo "$STEP2_RESPONSE" | jq .

STEP2_CODE=$(echo "$STEP2_RESPONSE" | jq -r '.code')
echo
if [ "$STEP2_CODE" = "0" ]; then
  echo "‚úÖ STEP 2 SUCCESS: Code verified"
  REDIRECT_URL=$(echo "$STEP2_RESPONSE" | jq -r '.redirect_url')
  echo "üîó Next step: $REDIRECT_URL"
else
  echo "‚ö†Ô∏è  STEP 2 EXPECTED FAILURE: Dummy code rejected (this is correct behavior)"
  echo "üìù In real flow, the actual 6-digit code would be sent via email"
fi
echo
echo "-------------------------------------------"
echo

# ============================================
# PASO 3: Completar registro (simulando c√≥digo v√°lido)
# ============================================
echo "üë§ STEP 3: Complete Registration"
echo "Endpoint: POST $API_BASE/complete-registration"
echo "üìù Note: This would normally work after valid code verification"
echo

STEP3_RESPONSE=$(curl -s -X POST "$API_BASE/complete-registration" \
  -H "$CONTENT_TYPE" \
  -d '{
    "email": "maria@nuevoflujo.com",
    "password": "MiNuevaPassword123!",
    "firstName": "Mar√≠a",
    "lastName": "Gonz√°lez",
    "phone": "+56987654321"
  }')

echo "$STEP3_RESPONSE" | jq .

STEP3_CODE=$(echo "$STEP3_RESPONSE" | jq -r '.code')
echo
if [ "$STEP3_CODE" = "0" ]; then
  echo "‚úÖ STEP 3 SUCCESS: Registration completed"
  TOKEN=$(echo "$STEP3_RESPONSE" | jq -r '.data.token')
  echo "üîë Access token: ${TOKEN:0:20}..."
  
  CUSTOMER_ID=$(echo "$STEP3_RESPONSE" | jq -r '.data.customer.id')
  echo "üë§ Customer ID: $CUSTOMER_ID"
else
  echo "‚ö†Ô∏è  STEP 3 EXPECTED FAILURE: No valid verification found (correct behavior)"
fi
echo
echo "-------------------------------------------"
echo

# ============================================
# PRUEBAS ADICIONALES
# ============================================

# Test: Email ya existente
echo "üîÑ TEST: Email already exists check"
echo "Endpoint: POST $API_BASE/check-email"
echo

curl -X POST "$API_BASE/check-email" \
  -H "$CONTENT_TYPE" \
  -d '{
    "email": "juan@ejemplo.com"
  }' | jq .
echo
echo "-------------------------------------------"
echo

# Test: C√≥digo inv√°lido
echo "‚ùå TEST: Invalid verification code"
echo "Endpoint: POST $API_BASE/verify-code"
echo

curl -X POST "$API_BASE/verify-code" \
  -H "$CONTENT_TYPE" \
  -d '{
    "email": "maria@nuevoflujo.com",
    "code": "000000"
  }' | jq .
echo
echo "-------------------------------------------"
echo

# Test: Email inv√°lido
echo "üìß TEST: Invalid email format"
echo "Endpoint: POST $API_BASE/check-email"
echo

curl -X POST "$API_BASE/check-email" \
  -H "$CONTENT_TYPE" \
  -d '{
    "email": "invalid-email-format"
  }' | jq .
echo
echo "-------------------------------------------"
echo

echo "=================================================="
echo "‚úÖ NEW Registration Flow Testing Complete"
echo
echo "üìã Summary of New Endpoints:"
echo "‚Ä¢ POST /api/customer/auth/check-email"
echo "‚Ä¢ POST /api/customer/auth/verify-code" 
echo "‚Ä¢ POST /api/customer/auth/complete-registration"
echo
echo "üîÑ Flow Summary:"
echo "1Ô∏è‚É£  User enters email ‚Üí System sends 6-digit code"
echo "2Ô∏è‚É£  User enters code ‚Üí System verifies and unlocks registration"
echo "3Ô∏è‚É£  User sets password & profile ‚Üí Registration complete with JWT"
echo
echo "üìù Notes:"
echo "‚Ä¢ Email verification is required before password setup"
echo "‚Ä¢ Codes expire in 10 minutes"
echo "‚Ä¢ Duplicate emails redirect to login"
echo "‚Ä¢ JWT tokens are generated upon successful completion"
